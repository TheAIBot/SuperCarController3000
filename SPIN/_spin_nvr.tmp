never test2 {    /* !([] (! ((((Car[carPID[0]]@barrierEntry)) && ((Car[carPID[1]]@barrierEntry))) && ((Car[carPID[2]]@barrierEntry))))) */
T0_init:
	do
	:: atomic { (! ((! ((((Car[carPID[0]]@barrierEntry)) && ((Car[carPID[1]]@barrierEntry))) && ((Car[carPID[2]]@barrierEntry)))))) -> assert(!(! ((! ((((Car[carPID[0]]@barrierEntry)) && ((Car[carPID[1]]@barrierEntry))) && ((Car[carPID[2]]@barrierEntry))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never obl0 {    /* !([] ((! ((Car[carPID[0]]@barrierEntry))) || (<> ((Car[carPID[0]]@afterBarrier))))) */
T0_init:
	do
	:: (! ((! ((Car[carPID[0]]@barrierEntry)))) && ! (((Car[carPID[0]]@afterBarrier)))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! (((Car[carPID[0]]@afterBarrier)))) -> goto accept_S4
	od;
}
